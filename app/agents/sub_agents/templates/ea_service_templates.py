from typing import Dict, List

# ประเภทของเรื่องร้องเรียน
COMPLAINT_TYPES = {
    'street_light': 'ไฟถนนดับ',
    'flooding': 'น้ำท่วม',
    'garbage': 'ขยะไม่ได้เก็บ',
    'noise': 'เสียงดังรบกวน',
    'sidewalk': 'ทางเท้าเสียหาย',
    'stray_dogs': 'สัตว์รบกวน',
    'safety': 'ความปลอดภัย'
}

# ประเภทของสวัสดิการ
WELFARE_TYPES = {
    'elderly': 'ลงทะเบียนผู้สูงอายุ',
    'disabled': 'ลงทะเบียนคนพิการ',
    'financial_aid': 'ขอรับเงินสงเคราะห์',
    'low_income': 'สวัสดิการผู้มีรายได้น้อย',
    'emergency': 'ช่วยเหลือฉุกเฉิน'
}

# คำถามพื้นฐานสำหรับทุกประเภทเรื่องร้องเรียน
BASIC_QUESTIONS = {
    'name': 'กรุณาระบุชื่อของท่าน',
    'contact': 'สามารถให้เบอร์โทรศัพท์ หรือช่องทางติดต่อกลับได้ไหม?',
    'location': 'ปัญหาที่แจ้งเกิดขึ้นที่ไหน? กรุณาระบุที่อยู่ หรือส่งพิกัดได้',
    'details': 'ปัญหาที่พบคืออะไร? ช่วยอธิบายรายละเอียดเพิ่มเติมหน่อย'
}

# คำถามเฉพาะสำหรับแต่ละประเภทเรื่องร้องเรียน
SPECIFIC_QUESTIONS = {
    'street_light': [
        'ไฟถนนดับมานานแค่ไหนแล้ว?',
        'อยู่เสาไฟต้นที่เท่าไหร่ หรือบริเวณไหน?',
        'เป็นไฟถนนที่เสียทุกคืน หรือบางครั้งบางคราว?'
    ],
    'flooding': [
        'น้ำเริ่มท่วมตั้งแต่เมื่อไหร่?',
        'ระดับน้ำสูงประมาณกี่เซนติเมตร?',
        'น้ำท่วมขังนานแค่ไหน?',
        'น้ำท่วมในบ้าน หรือบนถนน?'
    ],
    'garbage': [
        'รถขยะไม่ได้มาเก็บกี่วันแล้ว?',
        'ปกติรถขยะมาเก็บวันไหน?',
        'ขยะที่ไม่ได้เก็บมีลักษณะอย่างไร? (เช่น ขยะเปียก ขยะอุตสาหกรรม ฯลฯ)'
    ],
    'noise': [
        'เสียงดังเกิดขึ้นเวลาไหน?',
        'เป็นเสียงจากอะไร? (เช่น ร้านอาหาร งานเลี้ยง วัด มอเตอร์ไซค์ ฯลฯ)',
        'เกิดขึ้นทุกวัน หรือเป็นเหตุการณ์เฉพาะกิจ?'
    ],
    'sidewalk': [
        'ทางเท้าเป็นหลุมลึกหรือมีอุปสรรคอะไร?',
        'มีอุบัติเหตุเกิดขึ้นจากปัญหานี้หรือไม่?',
        'มีป้ายเตือนหรือสิ่งกีดขวางที่ทำให้คนเดินเห็นไหม?'
    ],
    'stray_dogs': [
        'มีสุนัขประมาณกี่ตัว?',
        'สุนัขมีพฤติกรรมก้าวร้าวหรือไม่?',
        'มีคนในชุมชนให้อาหารสุนัขเหล่านี้หรือไม่?'
    ],
    'safety': [
        'จุดที่เกิดปัญหามีไฟส่องสว่างเพียงพอหรือไม่?',
        'เกิดเหตุการณ์อาชญากรรมในพื้นที่นี้มาก่อนหรือไม่?',
        'มีการแจ้งความกับตำรวจแล้วหรือยัง?'
    ]
}

# ข้อมูลเกี่ยวกับสวัสดิการ
WELFARE_INFO = {
    'elderly': {
        'requirements': [
            'มีสัญชาติไทย',
            'มีอายุ 60 ปีบริบูรณ์ขึ้นไป',
            'ไม่เป็นผู้ได้รับสวัสดิการหรือสิทธิประโยชน์อื่นใดจากหน่วยงานของรัฐ'
        ],
        'documents': [
            'บัตรประจำตัวประชาชน',
            'ทะเบียนบ้าน',
            'สมุดบัญชีธนาคาร'
        ]
    },
    'disabled': {
        'requirements': [
            'มีบัตรประจำตัวคนพิการ',
            'มีสัญชาติไทย'
        ],
        'documents': [
            'บัตรประจำตัวคนพิการ',
            'บัตรประจำตัวประชาชน',
            'ทะเบียนบ้าน',
            'สมุดบัญชีธนาคาร'
        ]
    }
}

# ระดับความเร่งด่วน
URGENCY_LEVELS = {
    'high': 'เร่งด่วนมาก',
    'medium': 'เร่งด่วนปานกลาง',
    'low': 'ไม่เร่งด่วน'
}

def get_urgency_level(complaint_type: str, details: Dict[str, str]) -> str:
    """
    กำหนดระดับความเร่งด่วนตามประเภทเรื่องร้องเรียนและรายละเอียด
    """
    # ตรรกะในการกำหนดระดับความเร่งด่วน
    # จะถูกพัฒนาตามความต้องการที่เพิ่มขึ้น
    return URGENCY_LEVELS['medium']

def get_response_template(complaint_type: str) -> str:
    """
    สร้างข้อความตอบกลับตามประเภทเรื่องร้องเรียน
    """
    return f"ขอบคุณที่แจ้งปัญหาเรื่อง{COMPLAINT_TYPES.get(complaint_type, 'ทั่วไป')} เราได้รับเรื่องของท่านแล้ว"
